# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '63d564af-9226-4827-a519-889989f5a71d'
  imageRepository: 'shoppingapi'
  containerRegistry: 'poc12378acr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Create-AKS-NodePools-using-Terraform/src/Shopping.API/Dockerfile'
  tag: '1.0.0'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        buildContext: $(Build.SourcesDirectory)/Create-AKS-NodePools-using-Terraform/src
        tags: |
          $(tag)
    - upload: Create-AKS-NodePools-using-Terraform/deploy/aks
      artifact: aks

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build  
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'priyanko83mykube.default'
    strategy:
      runOnce:
        deploy:
          steps: 
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/aks/shoppingapi.yaml
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)